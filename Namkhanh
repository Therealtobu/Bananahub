task.spawn(function()

    repeat wait() until game:IsLoaded() and game.Players.LocalPlayer

    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local VIM = game:GetService("VirtualInputManager")

    -- Wait for Character to exist
    repeat wait() until player.Character and player.Character:FindFirstChild("HumanoidRootPart")

    local currentTarget = nil
    local lastLowHealthCount = 0

    -- Expand hitbox for other players
    task.spawn(function()
        while task.wait(1) do
            for _, v in pairs(Players:GetPlayers()) do
                if v ~= player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    pcall(function()
                        local hrp = v.Character.HumanoidRootPart
                        hrp.Size = Vector3.new(10, 10, 10)
                        hrp.Transparency = 0.7
                        hrp.Material = Enum.Material.ForceField
                        hrp.CanCollide = false
                    end)
                end
            end
        end
    end)

    -- Function to simulate lag
    function ApplyFigLag(minDelay, maxDelay)
        local delayTime = math.random(minDelay, maxDelay) / 1000
        task.wait(delayTime)
    end

    -- Function to predict enemy aim based on velocity and direction
    function PredictTargetAim(target)
        local targetHumanoidRootPart = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
        if targetHumanoidRootPart then
            local targetVelocity = targetHumanoidRootPart.Velocity
            local targetPosition = targetHumanoidRootPart.Position
            local aimPredictionDistance = targetVelocity.Magnitude * 0.5
            local predictedPosition = targetPosition + targetVelocity * aimPredictionDistance
            return predictedPosition
        end
        return nil
    end

    -- Anti Sus: Randomize skill usage
    function RandomizeSkillUsage()
        local skills = {"Z", "X", "C", "V", "F"}
        local skill = skills[math.random(1, #skills)]
        VIM:SendKeyEvent(true, skill, false, game)
        ApplyFigLag(100, 300)
        VIM:SendKeyEvent(false, skill, false, game)
    end

    -- Anti Kill: Smart dodge and attack back
    function SmartAttackAndDodge()
        local target = GetClosestEnemy()
        if target then
            local dist = (player.Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position).Magnitude
            if dist < 30 then
                PerformSmartDashWithLag()
                if target.Character:FindFirstChild("Ken") then
                    SpamSkillsDuringKen(target)
                end
                RandomizeSkillUsage()
            end
        end
    end

    -- Function to get the closest enemy
    function GetClosestEnemy()
        local shortest = math.huge
        local chosen = nil
        for _, v in ipairs(Players:GetPlayers()) do
            if v ~= player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                local dist = (v.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if dist < shortest then
                    shortest = dist
                    chosen = v
                end
            end
        end
        return chosen
    end

    -- Function to perform a smart dash with lag
    function PerformSmartDashWithLag()
        local dirs = {"W", "A", "S", "D"}
        local dir = dirs[math.random(1, #dirs)]
        VIM:SendKeyEvent(true, dir, false, game)
        ApplyFigLag(50, 150)
        VIM:SendKeyEvent(false, dir, false, game)
        ApplyFigLag(100, 200)
        VIM:SendKeyEvent(true, dir, false, game)
        ApplyFigLag(50, 150)
        VIM:SendKeyEvent(false, dir, false, game)
    end

    -- Dummy function for SpamSkillsDuringKen
    function SpamSkillsDuringKen(target)
        -- Add your logic if you have one
    end

    -- Main loop to monitor and handle actions
    game:GetService("RunService").Heartbeat:Connect(function()
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            return
        end

        local humanoid = player.Character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health < 5000 then
            lastLowHealthCount += 1
            if lastLowHealthCount >= 3 then
                currentTarget = GetClosestEnemy()
                lastLowHealthCount = 0
            end
        end

        if currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (player.Character.HumanoidRootPart.Position - currentTarget.Character.HumanoidRootPart.Position).Magnitude
            if dist < 30 then
                SmartAttackAndDodge()
            end
        else
            currentTarget = GetClosestEnemy()
        end
    end)

    -- Load BananaCat Hub
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/obiiyeuem/vthangsitink/refs/heads/main/BananaCat-BountyEz.lua"))()
    end)

    -- Load Walk on Water
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/thaithinhapi/README/refs/heads/master/walkonwater.lua"))()
    end)

    -- Load Auto Click
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/thaithinhapi/README/refs/heads/master/autoclick.lua"))()
    end)

    -- Continuous Space press
    task.spawn(function()
        while task.wait() do
            VIM:SendKeyEvent(true, "Space", false, game)
        end
    end)

end)
